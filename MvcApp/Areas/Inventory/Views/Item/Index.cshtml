@using MvcApp.Areas.Inventory.Models
@model List<ItemModel>;
@{
    ViewData["Title"] = "Edit Item";
}
<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav class="col-md-1 d-none d-md-block sidebar">
            <!-- Your SidebarNav goes here -->
            @await Html.PartialAsync("../Shared/SidebarNav.cshtml", "Index Item")
        </nav>
        <div class="col-xl-10 px-4">
            <div class="row">
                <div class="col-3"></div>
                <div class="col-6">
                    <h1 class="text-center">@ViewData["Title"]</h1>
                </div>
                <div class="col-3"></div>
                @if (ViewData["Error"] != null && ViewData["Error"].ToString().Length > 0)
                {
                    <h6 class="alert alert-danger" role="alert">@ViewData["Error"]</h6>
                }
            </div>
            <!-- Content goes under here -->
            <table class="table table-striped table-bordered table-sm nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th width="80%">Name</th>
                        <th>
                            @if (Model != null || Model.Count > 0)
                            {
                                @if (Model[0].ShowInactive)
                                {
                                    <a class="dropdown-item text-start" style="padding-bottom: 10px" asp-area="Inventory" asp-controller="Item" asp-action="Index" asp-route-ShowInactive="false" role="button">
                                        Hide Deleted
                                    </a>
                                }
                                else
                                {
                                    <a class="dropdown-item text-start" style="padding-bottom: 10px" asp-area="Inventory" asp-controller="Item" asp-action="Index" asp-route-ShowInactive="true" role="button">
                                        Show Deleted
                                    </a>
                                }
                            }
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null || Model.Count > 0)
                    {
                        @foreach (var Item in Model)
                        {
                            <tr>
                                <td>@Item.ItemName</td>
                                <td>
                                    <div class="btn-group" role="group" aria-label="Actions">
                                        <a class="btn btn-sm btn-outline-primary" asp-area="Inventory" asp-controller="Item" asp-action="Edit" asp-route-id="@Item.ItemId" title="Edit">
                                            <i class="bi bi-pencil-square"></i> Edit
                                        </a>
                                        @if (Item.IsActive)

                                        {
                                            <form class="d-inline" asp-area="Inventory" asp-controller="Item" asp-action="Delete" asp-route-id="@Item.ItemId" method="post">
                                                <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete"
                                                        onclick="return confirm('Are you sure you want to delete this Item?');">
                                                    <i class="bi bi-trash"></i> Delete
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <div class="col-1"></div>
        </div>
    </div>
</div>