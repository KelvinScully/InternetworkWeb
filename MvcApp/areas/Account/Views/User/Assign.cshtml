@using System.Security.Claims
@model MvcApp.Areas.Account.Models.AssignRolesModel
@{
    ViewData["Title"] = "Assign Roles to " + Model.UserName;

    // Rules:
    // 1) o one can delete TestSuperUser1
    // 2) You can only assign your rank or lower (i.e., worse/equal privilege)
    string[] roleOrder = { "SuperAdmin", "Admin", "Account Manager", "Inventory Manager", "User" };
    int Rank(string r) => Array.IndexOf(roleOrder, r) >= 0 ? Array.IndexOf(roleOrder, r) : int.MaxValue;
    var myRank = User.Claims
        .Where(c => c.Type == ClaimTypes.Role)
        .Select(c => Rank(c.Value))
        .DefaultIfEmpty(int.MaxValue)
        .Min();

}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav class="col-md-2 d-none d-md-block bg-light sidebar border-end vh-100 p-3">
            @await Html.PartialAsync("../Shared/SidebarNav.cshtml", "Assign User Roles")
        </nav>

        <!-- Main content -->
        <main class="col-md-10 ms-sm-auto px-4 pt-4">
            <div class="text-center mb-4">
                <h1 class="fw-bold text-primary">@ViewData["Title"]</h1>
                <h4 class="text-muted">Select a role to assign to this user</h4>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <form asp-action="Assign" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="UserId" />

                        <table class="table table-hover align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th>Role Name</th>
                                    <th class="text-center">Selected?</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var role in Model.Roles)
                                {
                                    var rnk = Rank(role.UserRoleName);

                                    // Remove roles above yours, anything above Admin, and SuperAdmin
                                    if (rnk < myRank)
                                    {
                                        continue;
                                    }

                                    <tr>
                                        <td>@role.UserRoleName</td>
                                        <td class="text-center">
                                            <input type="radio" name="SelectedRoleId" value="@role.UserRoleId"
                                                   @(Model.SelectedRoleId == role.UserRoleId ? "checked" : "") />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <div class="row justify-content-end mt-3">
                            <div class="col-auto">
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>
                            <div class="col-auto">
                                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <div class="alert alert-info text-center shadow-sm" role="alert">
                <strong>Note:</strong> Only one role can be assigned at a time. Role changes are logged for audit purposes.
            </div>
        </main>
    </div>
</div>
